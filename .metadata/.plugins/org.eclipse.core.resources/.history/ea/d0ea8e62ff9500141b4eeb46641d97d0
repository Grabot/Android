package onzichtbaar.net.Android.CityBuilder.gameScreen;

import java.util.ArrayList;

import onzichtbaar.net.Android.CityBuilder.load.Data;
import onzichtbaar.net.Android.CityBuilder.load.DisplayInfoBox;
import onzichtbaar.net.Android.CityBuilder.load.DrawTiles;
import onzichtbaar.net.Android.CityBuilder.load.Skin_Setup;
import onzichtbaar.net.Android.CityBuilder.load.TouchInput;
import onzichtbaar.net.Android.CityBuilder.objects.Citizen;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.Image;
import com.badlogic.gdx.scenes.scene2d.ui.Skin;
import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
import com.badlogic.gdx.scenes.scene2d.ui.TextField;

public class Renderer extends Data
{
	private  ArrayList<Citizen> citizens = new ArrayList<Citizen>();
	
	public static final String LOG = Renderer.class.getSimpleName();

	private DisplayInfoBox infoBoxDisplay;
	private TouchInput inputHandler;
	private DrawTiles drawTiles;
	
	private boolean touchedDown = false;
	private float touchX = 1700;
	private float touchY = 1700;
	
	private float distance = 0;
	
	private Stage stage;
	private OrthographicCamera camera;
	private SpriteBatch batch;
	
	private Skin skin;
	
	private float scaling_x = 0;
	private float scaling_y = 0;
	
	private Texture SquareTileSheep;
	private Texture SquareTileSelected;
	private Texture InfoBox;
	
	private TextButton woodButton;
	
	private boolean down_pressed = false;
	private boolean up_pressed = false;
	
	private TextField tileInfo;
	private TextField levelText;
	
	private Skin_Setup skin_setup;
	
	private GameScreen game;
	
	private Simulation simulation;
	
	private Image UserInterface;
	
	private TextureRegion SquareTileRegionSelected;
	private TextureRegion region;
	
	public Renderer( GameScreen game, OrthographicCamera camera, Stage stage, SpriteBatch batch, ArrayList<Citizen> citizens )
	{
		this.citizens = citizens;
		this.game = game;
		
		SquareTileSelected = new Texture( Gdx.files.internal( "SquareSelectedSmall.png" ));

		InfoBox = new Texture( Gdx.files.internal( "UITest.png" ));
		
		region = new TextureRegion(InfoBox, 0, 0, InfoBox.getWidth(), InfoBox.getHeight());
		SquareTileRegionSelected = new TextureRegion( SquareTileSelected, 0, 0, SquareTileSelected.getWidth(), SquareTileSelected.getHeight() );
	
		infoBoxDisplay = new DisplayInfoBox();
		inputHandler = new TouchInput();
		drawTiles = new DrawTiles();
		
		this.stage = stage;
		this.camera = camera;
		this.batch = batch;
		
		UserInterface = new Image(region);
		UserInterface.setBounds(880, 80, 400, 600);
		UserInterface.setVisible( true );
		
		skin_setup = new Skin_Setup();
		skin = new Skin();
		skin = skin_setup.set_skin();
		
		tileInfo = new TextField( "", skin );
		tileInfo.setDisabled(true);
		tileInfo.setBounds( 1030, 530, 300, 20 );
		tileInfo.setVisible( false );
		
		levelText = new TextField( "Level 1", skin );
		levelText.setDisabled(true);
		levelText.setBounds(30, 680, 300, 20 );
		levelText.setVisible( true );
		
		woodButton = new TextButton("Build Wall", skin );
		woodButton.setBounds(980, 220, 200, 50 );
		woodButton.setVisible( false );
		
		stage.addActor( UserInterface);
		stage.addActor( tileInfo );
		stage.addActor( levelText );
		stage.addActor( woodButton );
		
		camera.zoom = 0.5f;

		float width = Gdx.graphics.getWidth();
		float height = Gdx.graphics.getHeight();

		scaling_x = width/ScreenHeight;
		scaling_y = height/ScreenWidth;
	}
	
	 
	public void DrawImages( Simulation simulation )
	{
		this.simulation = simulation;
		this.touchedDown = simulation.getTouchedDown();
		this.touchX = simulation.getTouchX();
		this.touchY = simulation.getTouchY();
		this.down_pressed = simulation.getDown();
		this.up_pressed = simulation.getUp();
		this.distance = simulation.getDistance();
		
		inputHandler.variables( touchedDown, camera, simulation );
		inputHandler.MapScroll( touchX, touchY );
		inputHandler.MapZoom( distance, down_pressed, up_pressed);
		
		drawTiles.fillTiles( simulation, batch );
		
		boolean[] tileTouch = simulation.getTileTouch();
		
		for( int i = 0; i < simulation.tiles.size(); i++ )
		{
			if( tileTouch[i] )
			{
				infoBoxDisplay.displayInfoBox(tileInfo, simulation, i);
				drawTiles.drawSelected( simulation, batch, i );
			}
		}
		
	}
	
	public void dispose()
	{
		stage.clear();
	}
	
}